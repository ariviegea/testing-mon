const states = {
  READY: "READY",
  FETCHING: "FETCHING",
  SUCCESS: "SUCCESS",
  ERROR: "ERROR"
}

const events = {
  READY: "READY",
  SUCCESS: "SUCCESS",
  FAILED: "FAILED",
  RESET: "RESET",
  FETCH: "FETCH"
}

const exMachine = {
  initial: states.READY,
  states: {
      [states.READY]: {
          on: {
              [events.FETCH]: [states.FETCHING]
          }
      },
      [states.FETCHING]: {
          on: {
              [events.SUCCESS]: [states.SUCCESS],
              [events.FAILED]: [states.FAILED]
          }
      },
      [states.FAILED]: {
          on: {
              [events.RESET]: states.FETCHING
          }
      },
      [states.SUCCESS]: {
          on: {
              [events.RESET]: states.FETCHING
          }
      }
  }
}

const exReducer = (state, event) => {
  return(
      exMachine.states[state] && exMachine.states[state].on[event] || state
  )
}

const LoadingStep = ({dispatch}) => {
  return(
      <div>
          <h3>Loading...</h3>
      </div>
  )
} 

const InitialStep = ({dispatch, getMovies}) => {

  return(
      <div>
          <h3>FETCH MOVIES.</h3>
          <button className="btn btn-whitehall" onClick={getMovies}>Fetch</button>
      </div>
  )
}

const FailedStep = ({dispatch}) => {
  return(
      <div>
          <h3>An issue ocurred please press again reset to load the data</h3>
          <button className="btn btn-whitehall" onClick={() => {dispatch(events.RESET)}}>Reset</button>
          <button className="btn btn-whitehall" onClick={() => {dispatch(events.FETCH)}}>Fetch</button>
      </div>
  )
}

const SuccessStep = ({dispatch, movies}) => {
  return(
      <div>
          <h3>Credit check Successful</h3>
        <button className="btn btn-whitehall" onClick={() => {dispatch(events.RESET)}}>Reset</button>
      <div>
        { movies.map(movie => <p key={movie}>{movie}</p>)}
      </div>
        
      </div>
  )
}


const Excercise = () => {
/* Reducer makes the magic happen */
const [state, dispatch] = React.useReducer(
      exReducer,
      exMachine.initial
)


const [movies, setMovies] = React.useState([]);

const getMovies = () => {
console.log('click works')
 dispatch(events.FETCH);
  axios.get('https://api.themoviedb.org/3/discover/movie?sort_by=popularity.desc&api_key=36d37674fa5b6954e2ee7b2bf8f05f52')
  .then(res => {
    if(res.status === 200) {
      setMovies(res.data.results.map(movie => movie.original_title));
      dispatch(events.SUCCESS)
    }
  }).catch(err => {
    dispatch(events.FAILED)
  });
  
}

                                                                


/* Load stuff here */


return(
  <div>
     <div>
          { state == states.READY && <InitialStep dispatch={dispatch} getMovies={getMovies}/> }
          { state == states.FETCHING && <InitialStep dispatch={dispatch} getMovies={getMovies} /> }
          { state == states.SUCCESS && <SuccessStep dispatch={dispatch} movies={movies} />}
          { state == states.FAILED && <FailedStep dispatch={dispatch} />}
      </div>
  </div>
)
}

ReactDOM.render(
<Excercise />,
document.getElementById('root')
)

